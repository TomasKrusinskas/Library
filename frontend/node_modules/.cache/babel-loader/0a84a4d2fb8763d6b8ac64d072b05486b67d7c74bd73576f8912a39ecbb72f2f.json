{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tomas\\\\Desktop\\\\KTU\\\\Library\\\\frontend\\\\src\\\\components\\\\Registration.js\",\n  _s = $RefreshSig$();\n// src/components/Registration.js\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { registerUser } from '../services/api'; // Assuming registerUser is the API function for registration\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const handleRegistration = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const response = await registerUser({\n        name,\n        password\n      });\n      setSuccess('Registration successful! You can now login.');\n      navigate('/login'); // Redirect to login after successful registration\n    } catch (err) {\n      setError('Registration failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleRegistration,\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-3\",\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          as: \"span\",\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this) : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Registration, \"69b3Q/XgjuUPTYKXXZu7zQ+wbe4=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","Spinner","registerUser","useNavigate","jsxDEV","_jsxDEV","Registration","_s","name","setName","password","setPassword","loading","setLoading","error","setError","success","setSuccess","navigate","handleRegistration","e","preventDefault","response","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","variant","Group","controlId","Label","Control","type","value","onChange","target","placeholder","required","disabled","as","animation","size","_c","$RefreshReg$"],"sources":["C:/Users/Tomas/Desktop/KTU/Library/frontend/src/components/Registration.js"],"sourcesContent":["// src/components/Registration.js\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport { registerUser } from '../services/api';  // Assuming registerUser is the API function for registration\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Registration = () => {\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleRegistration = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n        setSuccess('');\r\n\r\n        try {\r\n            const response = await registerUser({ name, password });\r\n            setSuccess('Registration successful! You can now login.');\r\n            navigate('/login');  // Redirect to login after successful registration\r\n        } catch (err) {\r\n            setError('Registration failed. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2>Register</h2>\r\n            <Form onSubmit={handleRegistration}>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {success && <Alert variant=\"success\">{success}</Alert>}\r\n\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        placeholder=\"Enter your name\"\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\" className=\"mt-3\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Enter your password\"\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button className=\"mt-3\" variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : 'Register'}\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}