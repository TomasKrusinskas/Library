{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://localhost:7212/api'\n});\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    // Assuming 'token' is part of the user object\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const fetchBooks = async searchParams => {\n  try {\n    const response = await api.get('/books', {\n      params: searchParams\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching books:', error);\n    throw error;\n  }\n};\n\n// Create a reservation\nexport const createReservation = async data => {\n  try {\n    const response = await api.post('/reservations', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating reservation:', error);\n    throw error;\n  }\n};\n\n// Fetch reservations for a specific user\nexport const fetchReservations = async userId => {\n  try {\n    const response = await api.get('/reservations', {\n      params: {\n        userId\n      }\n    });\n    return response.data || []; // Ensure an array is returned, even if empty\n  } catch (error) {\n    var _error$response;\n    console.error('Error fetching reservations:', error);\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Error fetching reservations'; // Provide a default message\n  }\n};\n\n// Login a user\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Login failed:', error);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Login failed';\n  }\n};\n\n// Register a user\nexport const registerUser = async credentials => {\n  try {\n    const response = await api.post('/auth/register', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('Registration failed:', error);\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Registration failed';\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","headers","Authorization","error","Promise","reject","fetchBooks","searchParams","response","get","params","data","console","createReservation","post","fetchReservations","userId","_error$response","loginUser","credentials","_error$response2","registerUser","_error$response3"],"sources":["C:/Users/Tomas/Desktop/KTU/Library/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://localhost:7212/api',\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {  // Assuming 'token' is part of the user object\r\n        config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport const fetchBooks = async (searchParams) => {\r\n    try {\r\n        const response = await api.get('/books', { params: searchParams });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching books:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Create a reservation\r\nexport const createReservation = async (data) => {\r\n    try {\r\n        const response = await api.post('/reservations', data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating reservation:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fetch reservations for a specific user\r\nexport const fetchReservations = async (userId) => {\r\n    try {\r\n        const response = await api.get('/reservations', { params: { userId } });\r\n        return response.data || []; // Ensure an array is returned, even if empty\r\n    } catch (error) {\r\n        console.error('Error fetching reservations:', error);\r\n        throw error.response?.data || 'Error fetching reservations'; // Provide a default message\r\n    }\r\n}\r\n\r\n// Login a user\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/auth/login', credentials);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Login failed:', error);\r\n        throw error.response?.data || 'Login failed';\r\n    }\r\n};\r\n\r\n// Register a user\r\nexport const registerUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/auth/register', credentials);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Registration failed:', error);\r\n        throw error.response?.data || 'Registration failed';\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}