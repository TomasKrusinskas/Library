{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tomas\\\\Desktop\\\\KTU\\\\Library\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { loginUser } from '../services/api'; // Assuming loginUser is the API function for login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const response = await loginUser({\n        name,\n        password\n      }); // Send login request\n      localStorage.setItem('token', response.token); // Store token or user info\n      alert('Login successful!');\n    } catch (err) {\n      setError('Invalid login credentials.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleLogin,\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          as: \"span\",\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 32\n        }, this) : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"wFCsnIuFWqU9kq/YXprsJkjq6s0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","Spinner","loginUser","jsxDEV","_jsxDEV","Login","_s","name","setName","password","setPassword","loading","setLoading","error","setError","handleLogin","e","preventDefault","response","localStorage","setItem","token","alert","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","variant","Group","controlId","Label","Control","type","value","onChange","target","placeholder","required","disabled","as","animation","size","_c","$RefreshReg$"],"sources":["C:/Users/Tomas/Desktop/KTU/Library/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport { loginUser } from '../services/api';  // Assuming loginUser is the API function for login\r\n\r\nconst Login = () => {\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const response = await loginUser({ name, password });  // Send login request\r\n            localStorage.setItem('token', response.token);  // Store token or user info\r\n            alert('Login successful!');\r\n        } catch (err) {\r\n            setError('Invalid login credentials.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2>Login</h2>\r\n            <Form onSubmit={handleLogin}>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        placeholder=\"Enter your name\"\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Enter your password\"\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : 'Login'}\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}