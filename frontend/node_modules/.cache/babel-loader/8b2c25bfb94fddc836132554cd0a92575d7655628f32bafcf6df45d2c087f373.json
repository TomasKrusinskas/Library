{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://localhost:7212/api'\n});\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const fetchBooks = async searchParams => {\n  try {\n    const response = await api.get('/books', {\n      params: searchParams\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createReservation = async data => {\n  try {\n    const response = await api.post('/reservations', data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchReservations = async userId => {\n  try {\n    const response = await api.get('/reservations', {\n      params: {\n        userId\n      }\n    });\n    return response.data || [];\n  } catch (error) {\n    var _error$response;\n    if (error.response && error.response.status === 404) {\n      return [];\n    }\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Error fetching reservations';\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Login failed';\n  }\n};\nexport const registerUser = async credentials => {\n  try {\n    const response = await api.post('/auth/register', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Registration failed';\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","headers","Authorization","error","Promise","reject","fetchBooks","searchParams","response","get","params","data","createReservation","post","fetchReservations","userId","_error$response","status","loginUser","credentials","_error$response2","registerUser","_error$response3"],"sources":["C:/Users/Tomas/Desktop/KTU/Library/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://localhost:7212/api',\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n        config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport const fetchBooks = async (searchParams) => {\r\n    try {\r\n        const response = await api.get('/books', { params: searchParams });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createReservation = async (data) => {\r\n    try {\r\n        const response = await api.post('/reservations', data);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const fetchReservations = async (userId) => {\r\n    try {\r\n        const response = await api.get('/reservations', { params: { userId } });\r\n        return response.data || [];\r\n    } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n            return [];\r\n        }\r\n        throw error.response?.data || 'Error fetching reservations';\r\n    }\r\n};\r\n\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/auth/login', credentials);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Login failed';\r\n    }\r\n};\r\n\r\nexport const registerUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/auth/register', credentials);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Registration failed';\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE;IACpBN,MAAM,CAACO,OAAO,CAACC,aAAa,GAAG,UAAUP,IAAI,CAACK,KAAK,EAAE;EACzD;EACA,OAAON,MAAM;AACjB,CAAC,EAAGS,KAAK,IAAK;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAG,MAAOC,YAAY,IAAK;EAC9C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,QAAQ,EAAE;MAAEC,MAAM,EAAEH;IAAa,CAAC,CAAC;IAClE,OAAOC,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMS,iBAAiB,GAAG,MAAOD,IAAI,IAAK;EAC7C,IAAI;IACA,MAAMH,QAAQ,GAAG,MAAMpB,GAAG,CAACyB,IAAI,CAAC,eAAe,EAAEF,IAAI,CAAC;IACtD,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMW,iBAAiB,GAAG,MAAOC,MAAM,IAAK;EAC/C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,eAAe,EAAE;MAAEC,MAAM,EAAE;QAAEK;MAAO;IAAE,CAAC,CAAC;IACvE,OAAOP,QAAQ,CAACG,IAAI,IAAI,EAAE;EAC9B,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAa,eAAA;IACZ,IAAIb,KAAK,CAACK,QAAQ,IAAIL,KAAK,CAACK,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MACjD,OAAO,EAAE;IACb;IACA,MAAM,EAAAD,eAAA,GAAAb,KAAK,CAACK,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAI,6BAA6B;EAC/D;AACJ,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMpB,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAEM,WAAW,CAAC;IAC3D,OAAOX,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAiB,gBAAA;IACZ,MAAM,EAAAA,gBAAA,GAAAjB,KAAK,CAACK,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAI,cAAc;EAChD;AACJ,CAAC;AAED,OAAO,MAAMU,YAAY,GAAG,MAAOF,WAAW,IAAK;EAC/C,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMpB,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAEM,WAAW,CAAC;IAC9D,OAAOX,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAmB,gBAAA;IACZ,MAAM,EAAAA,gBAAA,GAAAnB,KAAK,CAACK,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBX,IAAI,KAAI,qBAAqB;EACvD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}